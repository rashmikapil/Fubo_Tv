
function Youbora()

     obj = {
        sendping: true 'track when start has been sent and pings and be sent'
        date: CreateObject("roDateTime") 'common object for date'
        lastPing:0 'track the last ping time'
        pluginVersion: "2.0.1_roku"
        referer: "roku",
        code: "" 'code that is generated by Fast Data'
        nqsurl: "" 'url of nqs returned by Fast Data'
        silent: false 'print the urls or not'
        pt: "" 'ping time'
        dataURL : "http://nqs.nice264.com/data" 'url of the Fast Data Service'
        systemCode : ""    'System code that the clients inform'

        setSilent:          function(silent) 'enable or disable logs of http requests'
                                m.silent=silent
                            end function

        init:               function(systemCode) 'inialization of youbora session'
                                m.systemCode = systemCode
                                m.dataURL =  m.dataURL +"?pluginVersion="+m.pluginVersion+"&system="+m.systemCode

                            end function

        getDataInfo:        function() 'call to Fast Data'
                                print "calling getDataInfo"
                                print m.dataURL
                                request = CreateObject("roUrlTransfer")'
                                request.SetUrl(m.dataURL)
                                request.SetCertificatesFile("common:/certs/ca-bundle.crt")
                                request.AddHeader("X-Roku-Reserved-Dev-Id", "")
                                request.InitClientCertificates()
                                xml = request.GetToString() 'synchronously call and retireve Fast Data'
                                print "XML: ";xml
                                print xml
                                q=CreateObject("roXMLElement")
                                q.Parse(xml)
                                m.code = q.c.GetText()
                                m.nqsurl = q.h.GetText()
                                m.pt = q.pt.GetText()
                                return m.pt.ToInt()
                            end function

        start:              function(resource,liveVideo,properties,user,extraparams,duration,hashtitle,cdn,isp,ip) 'nqs start'
                                'parse booleans to strings'
                                r = CreateObject("roUrlTransfer")
                                live = ""
                                if liveVideo=True:
                                    live = "true"
                                else
                                    live = "false"
                                end if

                                hasht = ""
                                if hashtitle=True:
                                    hasht="true"
                                else
                                    hasht="false"
                                end if

                                'Construct url with parameters
                                '
                                urlstart = "http://"+m.nqsurl +"/start?code="+r.Escape(m.code)+"&resource="+r.Escape(resource)+"&system="+r.Escape(m.systemCode)+"&live="+r.Escape(live)+"&duration="+r.Escape(duration.toStr())
                                ''urlstart = "http://"+m.nqsurl +"/start?code="+r.Escape(m.code)+"&resource="+r.Escape(resource)+"&system="+r.Escape(m.systemCode)+"&transcode="+r.Escape(transactionCode)+"&live="+r.Escape(live)+"&duration="+r.Escape(duration.toStr())

                                urlstart = urlstart + "&properties="+r.Escape(properties)+"&user="+r.Escape(user)+"&referer="+r.Escape(m.referer)+"&pingTime="+r.Escape(m.pt)+"&pluginVersion="+r.Escape(m.pluginVersion)+"&hashtitle="+r.Escape(hasht)

                                 log("DEBUG", " ==Youbora properties Set=="+properties)
                                'optionals parameters'
                                For i=1 To 10 Step 1
                                    param = "param"+i.toStr()
                                    if extraparams.DoesExist(param)
                                        urlstart = urlstart + "&"+param+"="+r.Escape(extraparams[param])
                                    endif
                                End For

                                if cdn<>""
                                    urlstart=urlstart+"&cdn="+r.Escape(cdn)
                                end if

                                ' if isp<>""
                                '     urlstart=urlstart+"&isp="+r.Escape(isp)
                                ' end if

                                ' if ip<>""
                                '     urlstart=urlstart+"&ip="+r.Escape(ip)
                                ' end if

                                m.sendping=true 'start is going to be send, so enable ping sending'

                                m.asyncRequest(r,urlstart)

                            end function

        joinTime:           function(videotime,time) 'send nqs join time'
                                r = CreateObject("roUrlTransfer")
                                urljoin = "http://"+m.nqsurl +"/joinTime?code="+r.Escape(m.code)+"&time="+time.toStr()+"&eventTime="+videotime.toStr()
                                m.asyncRequest(r,urljoin)
                            end function

        resume:             function() 'nqs resume'
                                r = CreateObject("roUrlTransfer")
                                urlresume = "http://"+m.nqsurl +"/resume?code="+r.Escape(m.code)
                                m.asyncRequest(r,urlresume)
                            end function

        pause:              function() 'nqs pause'
                                r = CreateObject("roUrlTransfer")
                                urlpause = "http://"+m.nqsurl +"/pause?code="+r.Escape(m.code)
                                m.asyncRequest(r,urlpause)
                            end function

        stop:               function() 'nqs stop'
                                r = CreateObject("roUrlTransfer")
                                m.date.mark()
                                cur = m.date.asSeconds()
                                diffTime = 0 'difference with last ping'
                                if(m.lastPing>0)
                                    diffTime = (cur - m.lastPing) *1000
                                end if
                                urlstop = "http://"+m.nqsurl +"/stop?code="+r.Escape(m.code)+"&diffTime="+diffTime.toStr()
                                m.asyncRequest(r,urlstop)
                            end function

        ping:               function(time,bitrate) 'nqs ping'
                                r = CreateObject("roUrlTransfer")
                                m.date.mark()
                                cur = m.date.asSeconds()
                                diffTime = 0 'difference with last ping'
                                if(m.lastPing>0)
                                    diffTime = (cur - m.lastPing) *1000
                                end if
                                urlping = "http://"+m.nqsurl +"/ping?code="+r.Escape(m.code)+"&pingTime="+r.Escape(m.pt)+"&bitrate="+r.Escape(bitrate.toStr())+"&time="+r.Escape(time.toStr())+"&diffTime="+diffTime.ToStr()
                                m.lastPing = cur
                                if(m.sendping=true)
                                    m.asyncRequest(r,urlping)
                                endif

                            end function

        bufferUnderrun:     function(time,duration) 'nqs buffer underrun'
                                r = CreateObject("roUrlTransfer")
                                urlbuffer = "http://"+m.nqsurl +"/bufferUnderrun?code="+r.Escape(m.code)+"&time="+r.Escape(time.toStr())+"&duration="+r.Escape(duration.toStr())
                                m.asyncRequest(r,urlbuffer)
                            end function

        error:              function(errorCode, resource,transactionCode,liveVideo,properties,user,extraparams,duration,hashtitle,cdn,isp,ip) 'nqs error'

                                'Youbora error mapping'
                                REM 0   Network error : server down or unresponsive, server is unreachable, network setup problem on the client.
                                REM -1  HTTP error: malformed headers or HTTP error result.
                                REM -2  Connection timed out
                                REM -3  Unknown error
                                REM -4  Empty list; no streams were specified to play
                                REM -5  Media error; the media format is unknown or unsupported

                                youboraErrorCode=""
                                if(errorCode=0)
                                    youboraErrorCode="16000"
                                else if(errorCode=-1)
                                    youboraErrorCode="16001"
                                else if(errorCode=-2)
                                    youboraErrorCode="16002"
                                else if(errorCode=-3)
                                    youboraErrorCode="16003"
                                else if(errorCode=-4)
                                    youboraErrorCode="16004"
                                else if(errorCode=-5)
                                    youboraErrorCode="16005"
                                endif

                                r = CreateObject("roUrlTransfer")

                                'Boolean parsing'
                                live = ""
                                if liveVideo=True:
                                    live = "true"
                                else
                                    live = "false"
                                end if

                                hasht = ""
                                if hashtitle=True:
                                    hasht="true"
                                else
                                    hasht="false"
                                end if

                                urlerror = "http://"+m.nqsurl +"/error?errorCode="+r.Escape(youboraErrorCode)+"&code="+r.Escape(m.code)+"&resource="+r.Escape(resource)+"&system="+r.Escape(m.systemCode)+"&live="+r.Escape(live)
                                ''urlerror = "http://"+m.nqsurl +"/error?errorCode="+r.Escape(youboraErrorCode)+"&code="+r.Escape(m.code)+"&resource="+r.Escape(resource)+"&system="+r.Escape(m.systemCode)+"&transcode="+r.Escape(transactionCode)+"&live="+r.Escape(live)

                                urlerror = urlerror + "&properties="+r.Escape(properties)+"&user="+r.Escape(user)+"&referer="+r.Escape(m.referer)+"&pingTime="+r.Escape(m.pt)+"&pluginVersion="+r.Escape(m.pluginVersion)+"&hashtitle="+r.Escape(hasht)

                                'optionals:'
                                For i=1 To 10 Step 1
                                    param = "param"+i.toStr()
                                    if extraparams.DoesExist(param)
                                        urlerror = urlerror + "&"+param+"="+r.Escape(extraparams[param])
                                    endif
                                End For

                                if cdn<>""
                                    urlerror=urlerror+"&cdn="+r.Escape(cdn)
                                end if

                                ' if isp<>""
                                '     urlerror=urlerror+"&isp="+r.Escape(isp)
                                ' end if

                                ' if ip<>""
                                '     urlerror=urlerror+"&ip="+r.Escape(ip)
                                ' end if

                                m.asyncRequest(r,urlerror)

                            end function

        asyncRequest:       function(request,url) 'helper function to send an asynchronous request'
                                ' print "Async Request Called from Youbora Library File"
                                url = url + "&randomNumber="+Rnd(1000).ToStr()
                                request.SetUrl(url)
                                boraPort = CreateObject("roMessagePort")
                                request.SetPort(boraPort)
                                if(request.AsyncGetToString())
                                    while (true)
                                        msg = wait(200, boraPort)
                                        if (type(msg) = "roUrlEvent")
                                            code = msg.GetResponseCode()
                                            if (code = 200 and m.silent=false)
                                                ' print request.GetUrl()
                                                log("DEBUG", request.GetUrl())
                                                status = true
                                            end if
                                            exit while
                                        else if (type(msg) = invalid)
                                            print "Cancel"
                                            request.AsyncCancel()
                                            exit While
                                        endif
                                    end while
                                end if
                            end function


     }
     return obj
end function